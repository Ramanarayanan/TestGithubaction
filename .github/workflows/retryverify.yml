name: TriggerWorkflow

on:
  push:
    branches:
      - main  # Adjust the branch name as needed
  workflow_dispatch:

jobs:
  trigger_and_verify:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Workflow
        id: trigger_workflow
        run: |
          response=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/Parentworkflow.yml/dispatches" \
            -d '{"ref": "main"}')
          echo "$response"
          run_id=$(echo "$response" | jq -r '.id')
          echo "Triggered workflow with ID: $run_id"

      - name: Wait for 30 seconds
        run: sleep 30s
      - name: Get Workflow Runs
        id: get_workflow_runs
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/Parentworkflow.yml/runs")
                   echo $response.workflow_runs[0]
          echo $response > workflow_runs.json
      - name: Get the latest workflow run
        id: latest_workflow_run
        run: |
          latest_run=$(cat workflow_runs.json | jq 'max_by(.updated_at)')
          echo $latest_run
          echo $latest_run > latest_workflow_run.json

      - name: Show the latest workflow run
        run: cat latest_workflow_run.json

      - name: Check Workflow Status
        id: check_workflow
        run: |
          for i in {1..3}; do
            response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${{ github.repository }}/actions/runs?workflow_id=${{ steps.trigger_workflow.outputs.run_id }}")
            conclusion=$(echo "$response" | jq -r '.workflow_runs[0].conclusion')
            if [[ "$conclusion" == "success" ]]; then
              echo "Workflow is successful."
              break
            elif [[ "$i" == 3 ]]; then
              echo "Workflow is not successful after 3 attempts. Exiting..."
              exit 1
            else
              echo "Workflow is not successful. Retrying in 30 seconds..."
              sleep 30s
            fi
          done

